name: PR Checks

on:
  pull_request:
    branches:
      - develop

jobs:
  imports:
    name: Imports
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: check
        uses: grandcolline/golang-github-actions@v1.1.0
        with:
          run: imports
          token: ${{ secrets.GITHUB_TOKEN }}

  errcheck:
    name: Errcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: check
        uses: grandcolline/golang-github-actions@v1.1.0
        with:
          run: errcheck
          token: ${{ secrets.GITHUB_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: check
        uses: grandcolline/golang-github-actions@v1.1.0
        with:
          run: lint
          token: ${{ secrets.GITHUB_TOKEN }}

  shadow:
    name: Shadow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: check
        uses: grandcolline/golang-github-actions@v1.1.0
        with:
          run: shadow
          token: ${{ secrets.GITHUB_TOKEN }}

  staticcheck:
    name: StaticCheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: check
        uses: grandcolline/golang-github-actions@v1.1.0
        with:
          run: staticcheck
          token: ${{ secrets.GITHUB_TOKEN }}

  sec:
    name: Sec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: check
        uses: grandcolline/golang-github-actions@v1.1.0
        with:
          run: sec
          token: ${{ secrets.GITHUB_TOKEN }}
          flags: "-exclude=G104"

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Test code
        run: go test -v ./...

  hadolint-check:
    name: hadolint-check
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: hadolint
        uses: reviewdog/action-hadolint@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-check

  hadolint-reviewer:
    name: hadolint-reviewer
    runs-on: ubuntu-latest
    steps:
      - name: Review code
        uses: actions/checkout@v2
      - name: hadolint
        uses: reviewdog/action-hadolint@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review

  yamllint:
    name: yamllint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: yaml-lint
        uses: ibiqlik/action-yamllint@master
        with:
#          file_or_dir: myfolder/*values*.yaml
          config_file: .yamllint.yml
